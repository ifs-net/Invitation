<?php
/**
 * Invitation
 *
 * @copyright Florian Schießl
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package Invitation
 * @author Florian Schießl <info@ifs-net.de>.
 * @link http://www.ifs-net.de
 */

class Invitation_Block_Latest extends Zikula_Controller_AbstractBlock
{
    /**
     * Initialise the block.
     *
     * @return void
     */
    public function init()
    {
        SecurityUtil::registerPermissionSchema('Invitation:LatestBlock:', 'Block title::');
    }

    /**
     * Get information on the block.
     *
     * @return array The block information.
     */
    public function info()
    {
        return array(
            'module'          => 'Invitation',
            'text_type'       => $this->__('Invitations'),
            'text_type_long'  => $this->__('See who was invited recently and registered at this website'),
            'allow_multiple'  => true,
            'form_content'    => false,
            'form_refresh'    => false,
            'show_preview'    => true,
            'admin_tableless' => true,
        );
    }

    /**
     * Display the block.
     *
     * @param array $blockinfo A blockinfo structure.
     * 
     * @return string The rendered block.
     */
    public function display($blockinfo)
    {
        // Check if the Profile module is available or saving of login dates are disabled
        if (!ModUtil::available('Invitation')) {
            return false;
        }

        // Security check
        if (!SecurityUtil::checkPermission('Invitation:LatestBlock:', "$blockinfo[title]::", ACCESS_READ)) {
            return false;
        }

        // Get variables from content block
        $vars = BlockUtil::varsFromContent($blockinfo['content']);
        if (!isset($vars['numitems'])) {
            $vars['numitems'] = 10;
        }

        $this->view->setCaching(true);
        $this->view->setCacheLifetime(3600);


        ModUtil::dbInfoLoad('Invitation');
	$tables = DBUtil::getTables();
	$column = $tables['invitation_cache_column'];
	$where = "tbl.".$column['iuid']." > 1";
	$orderby = "tbl.".$column['id']." DESC";

        // Table join information to join userpictures table with users table to retrieve the usernames
	// This join information is the second join information so we have to use the prefix a. in the following where parts
	$joinInfo = array();
	// join a
	$joinInfo[] = array (	'join_table'          =>  'users',			// table for the join
                                'join_field'          =>  'uname',			// field in the join table that should be in the result with
                         	'object_field_name'   =>  'uname',			// ...this name for the new column
                         	'compare_field_table' =>  'uid',			// regular table column that should be equal to
                         	'compare_field_join'  =>  'uid');			// ...the table in join_table
        // join b
	$joinInfo[] = array (	'join_table'          =>  'users',			// table for the join
				'join_field'          =>  'uname',			// field in the join table that should be in the result with
                         	'object_field_name'   =>  'iuname',			// ...this name for the new column
                         	'compare_field_table' =>  'iuid',			// regular table column that should be equal to
                         	'compare_field_join'  =>  'uid');			// ...the table in join_table

        
        $items=DBUtil::selectExpandedObjectArray('invitation_cache',$joinInfo,$where,$orderby,0,($vars['numitems']));
        if (count($items)== 0) {
                    return false;
            }
        $this->view->assign('items', $items);

        $blockinfo['content'] = $this->view->fetch('block/latest.htm');

        return BlockUtil::themeBlock($blockinfo);
    }
    
    /**
     * Modify block settings.
     *
     * @param array $blockinfo A blockinfo structure.
     * 
     * @return string The rendered block form.
     */
    public function modify($blockinfo)
    {
        // Get current content
        $vars = BlockUtil::varsFromContent($blockinfo['content']);

        // Defaults
        if (empty($vars['numitems'])) {
            $vars['numitems'] = 5;
        }

        // Create output object
        $this->view->setCaching(false);

        // assign the approriate values
        $this->view->assign('numitems', $vars['numitems']);

        // Return the output that has been generated by this function
        return $this->view->fetch('block/latest_modify.htm');
    }

    /**
     * Update block settings.
     *
     * @param array $blockinfo A blockinfo structure.
     * 
     * @return array The modified blockinfo structure.
     */
    public function update($blockinfo)
    {
        // Get current content
        $vars = BlockUtil::varsFromContent($blockinfo['content']);

        // alter the corresponding variable
        $vars['numitems'] = (int)$this->request->getPost()->get('numitems', null);

        // write back the new contents
        $blockinfo['content'] = BlockUtil::varsToContent($vars);

        // clear the block cache
        $this->view->clear_cache('block/latest.htm');

        return $blockinfo;
    }
}


